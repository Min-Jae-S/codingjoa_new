<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<!-- 해당 컬럼이 null 허용일 경우 null인 상태로 insert나 update를 처리해주는 설정, 부적합한 열 유형: 1111 -->
		<!-- 1. JdbcType(#{columnNm, jdbcType=VARCHAR) 2. mybatis-config.xml-->
		<setting name="jdbcTypeForNull" value="NULL"/>
		
		<!-- 컬럼명으로 snake case 를 사용하는 경우 필드의 camel case 변수명을 자동변환 -->
		<setting name="mapUnderscoreToCamelCase" value="true"/>
		
		<!-- MyBatis, by default, returns null when all the columns of a returned row are NULL. 
		When this setting is enabled, MyBatis returns an empty instance instead. 
		Note that it is also applied to nested results (i.e. collectioin and association). Since: 3.4.2 -->
		<!-- 가져온 Row 의 컬럼 데이터 전체가 Null 이어도 컬럼별 NULL 데이터를 생성한다. -->
		<!-- <setting name="returnInstanceForEmptyRow" value="true"/> -->
		
		<!-- 가져온 컬럼의 데이터가 Null 이어도 Setter Method 를 통해 데이터를 바인딩 한다. -->
		<setting name="callSettersOnNulls" value="true"/>
	</settings>
	
	<typeAliases>
		<typeAlias type="com.codingjoa.entity.Member" alias="member"/>
		<typeAlias type="com.codingjoa.entity.Auth" alias="auth"/>
		<typeAlias type="com.codingjoa.entity.Category" alias="category"/>
		<typeAlias type="com.codingjoa.entity.Board" alias="board"/>
		<typeAlias type="com.codingjoa.entity.BoardImage" alias="boardImage"/>
		<typeAlias type="com.codingjoa.entity.ProfileImage" alias="profileImage"/>
		<typeAlias type="com.codingjoa.entity.Comment" alias="comment"/>
		<typeAlias type="com.codingjoa.entity.BoardLikes" alias="boardLikes"/>
		<typeAlias type="com.codingjoa.entity.CommentLikes" alias="commentLikes"/>
		
		<typeAlias type="com.codingjoa.pagination.Criteria" alias="boardCri"/>
		<typeAlias type="com.codingjoa.pagination.CommentCriteria" alias="commentCri"/>
		
		<!-- <typeAlias type="com.codingjoa.mybatis.ClobTypeHandler" alias="clobTypeHandler"/> -->
	</typeAliases>
	
	<!--
	# CLOB을 String으로 반환하는 방법
		- TypeHander 등록해서 사용하기 
		- 별도의 타입핸들러 등록없이 사용하기 (Oracle 10g 이상), javaType과 jdbcType 설정 필요
	-->
	
	<!-- <typeHandlers>
		<typeHandler handler="com.codingjoa.mybatis.ClobTypeHandler" javaType="String" jdbcType="LONGVARCHAR"/>
		<typeHandler handler="com.codingjoa.mybatis.ClobTypeHandler" javaType="String" jdbcType="CLOB"/>
	</typeHandlers> -->
</configuration>
