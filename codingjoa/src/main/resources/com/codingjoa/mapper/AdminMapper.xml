<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codingjoa.mapper.AdminMapper">

	<resultMap id="adminUserMap" type="AdminUser">
		<id column="id" property="user.id"/>
		<association property="user" javaType="User">
			<id column="id" property="id"/>
			<result column="email" property="email"/>
			<result column="password" property="password"/>
			<result column="nickname" property="nickname"/>
			<result column="zipcode" property="zipcode"/>
			<result column="addr" property="addr"/>
			<result column="addr_detail" property="addrDetail"/>
			<result column="agree" property="agree"/>
			<result column="created_at" property="createdAt"/>
			<result column="updated_at" property="updatedAt"/>
		</association>
		<association property="snsInfo" javaType="SnsInfo">
			<result column="provider" property="provider"/>
			<result column="connected_at" property="connectedAt"/>
		</association>
		<collection property="auths" ofType="Auth">
			<result column="role" property="role"/>
		</collection>
	</resultMap>
	
	<select id="findPagedUsers" resultMap="adminUserMap">
		SELECT
			/*+ ORDERED USE_NL(auth) */
			final_users.*,
			sns_info.*,
			auth.*
		FROM (
			SELECT
				paged_users.*
			FROM (
				SELECT
					ROWNUM rn,
					filterd_users.*
				FROM (
					SELECT
						/*+ INDEX_DESC(users pk_users) */
						users.*
					FROM 
						users
					ORDER BY
						id DESC
				) filterd_users
				WHERE
					<![CDATA[ ROWNUM <= ( #{page} * #{recordCnt} ) ]]>
			) paged_users
			WHERE 
				paged_users.rn > ( (#{page} - 1) * #{recordCnt} )
		) final_users
		LEFT OUTER JOIN
			sns_info
		ON
			final_users.id = sns_info.user_id
		INNER JOIN
			auth
		ON
			final_users.id = auth.user_id
	</select>
	
	<select id="findTotalCntForUserPaging" resultType="int">
		SELECT
			COUNT(*)
		FROM
			users
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	<delete id="deleteUsers" parameterType="list">
		DELETE FROM 
			users
		WHERE
			id IN
		 	<foreach collection="list" item="id" open="(" close=")" separator=",">	
				#{id}
			</foreach>
	</delete>

	<resultMap id="adminBoardMap" type="AdminBoard">
		<association property="board" javaType="Board">
			<id column="id" property="id"/>
			<result column="user_id" property="userId"/>
			<result column="category_code" property="categoryCode"/>
			<result column="title" property="title"/>
			<result column="content" property="content"/>
			<result column="search_content" property="searchContent"/>
			<result column="view_count" property="viewCount"/>
			<result column="comment_count" property="commentCount"/>
			<result column="like_count" property="likeCount"/>
			<result column="created_at" property="createdAt"/>
			<result column="updated_at" property="updatedAt"/>
		</association>
		<association property="user" javaType="User">
			<id column="users_id" property="id"/>
			<result column="email" property="email"/>
			<result column="password" property="password"/>
			<result column="nickname" property="nickname"/>
			<result column="zipcode" property="zipcode"/>
			<result column="addr" property="addr"/>
			<result column="addr_detail" property="addrDetail"/>
			<result column="agree" property="agree"/>
			<result column="users_created_at" property="createdAt"/>
			<result column="users_updated_at" property="updatedAt"/>
		</association>
		<association property="category" javaType="Category">
			<id column="code" property="code"/>
			<result column="parent_code" property="parentCode"/>
			<result column="name" property="name"/>
			<result column="path" property="path"/>
		</association>
	</resultMap>
	
	<sql id="searchBoardCriteria">
		<where>
			<if test='!categories.empty'>
				board.category_code IN
				<foreach collection="categories" item="categoryCode" open="(" close=")" separator=",">
					${categoryCode}
				</foreach>
			</if>
			<if test='!keyword.empty'>
				<foreach collection='types' item="item" open="AND (" close=")" separator="OR">
					<if test='item.equals("title")'>
						REGEXP_LIKE( board.title, #{keywordRegexp} )
					</if>
					<if test='item.equals("content")'>
						REGEXP_LIKE( board.search_content, #{keywordRegexp} )
					</if>
					<if test='item.equals("writer")'>
						REGEXP_LIKE( users.nickname, #{keywordRegexp} )
					</if> 
				</foreach>
			</if>
		</where>
	</sql>

	<select id="findPagedBoards" resultMap="adminBoardMap">
		SELECT
			final_board.id,
			final_board.user_id,
			final_board.category_code,
			final_board.title,
			final_board.content,
			final_board.search_content,
			final_board.view_count,
			final_board.comment_count,
			final_board.like_count,
			final_board.created_at,
			final_board.updated_at,
			final_board.users_id,
			final_board.email,
			final_board.password,
			final_board.nickname,
			final_board.zipcode,
			final_board.addr,
			final_board.addr_detail,
			final_board.agree,
			final_board.users_created_at,
			final_board.users_updated_at,
			category.*
		FROM (
			SELECT
				paged_board.*
			FROM (
				SELECT
					ROWNUM rn,
					filterd_board.*
				FROM (
					SELECT
						/*+ INDEX_DESC(board pk_board) */
						board.*,
						users.id			AS users_id,
						users.email,
						users.password,
						users.nickname,
						users.zipcode,
						users.addr,
						users.addr_detail,
						users.agree,
						users.created_at 	AS users_created_at,
						users.updated_at 	AS users_updated_at
					FROM 
						board
					INNER JOIN
						users
					ON
						board.user_id = users.id
					<include refid="searchBoardCriteria"/>
					ORDER BY
						<choose>
							<when test="'latest'.equals(sort)">
								board.id DESC
							</when>
							<when test="'popular'.equals(sort)">
								board.like_count DESC, board.id DESC
							</when>
							<when test="'view'.equals(sort)">
								board.view_count DESC, board.id DESC
							</when>
							<when test="'comment'.equals(sort)">
								board.comment_count DESC, board.id DESC
							</when>
							<otherwise>
								board.id DESC 
							</otherwise>
						</choose>
				) filterd_board
				WHERE
					<![CDATA[ ROWNUM <= ( #{page} * #{recordCnt} ) ]]>
			) paged_board
			WHERE 
				paged_board.rn > ( (#{page} - 1) * #{recordCnt} )
		) final_board
		INNER JOIN
			category
		ON
			final_board.category_code = category.code
	</select>
	
	<!-- <select id="findPagedBoards" resultMap="adminBoardMap">
		SELECT
			/*+ ORDERED USE_NL(category) USE_NL(comment_group) USE_NL(likes_group) */
			paged_board.*,
			category.*,
			NVL(comment_group.cnt, 0)	AS comment_cnt,
			NVL(likes_group.cnt, 0) 	AS likes_cnt
		FROM (
			SELECT
				filterd_board.*
			FROM (
				SELECT
					/*+ INDEX_DESC(board pk_board) */
					ROWNUM rn,
					board.board_idx,
					board.board_writer_idx,
					board.board_title,
					board.board_content,
					board.board_content_text,
					board.board_category_code,
					board.board_views,
					board.created_at,
					board.updated_at,
					member.member_idx,
					member.member_email,
					member.member_password,
					member.member_nickname,
					member.member_zipcode,
					member.member_addr,
					member.member_addr_detail,
					member.member_agree,
					member.created_at AS member_created_at,
					member.updated_at AS member_updated_at
				FROM 
					board
				INNER JOIN
					member
				ON
					board.board_writer_idx = member.member_idx
				WHERE 
					<include refid="searchBoardCriteria"/>
					<![CDATA[ ROWNUM <= ( #{page} * #{recordCnt} ) ]]>
			) filterd_board
			WHERE 
				filterd_board.rn > ( (#{page} - 1) * #{recordCnt} )
		) paged_board
		INNER JOIN
			category
		ON
			paged_board.board_category_code = category.category_code
		LEFT OUTER JOIN (
			SELECT 
				board_idx, COUNT(*) cnt
			FROM 
				"comment"
			GROUP BY 
				board_idx
		) comment_group
		ON 
			paged_board.board_idx = comment_group.board_idx
		LEFT OUTER JOIN ( 
			SELECT 
				board_idx, COUNT(*) cnt
			FROM 
				board_likes
			GROUP BY 
				board_idx
		) likes_group
		ON 
			paged_board.board_idx = likes_group.board_idx
	</select> -->
	
	<select id="findTotalCntForBoardPaging" resultType="int">
		SELECT
			COUNT(*)
		FROM
			board
		INNER JOIN
			users
		ON
			board.user_id = users.id
		<include refid="searchBoardCriteria"/>
	</select>
	
	<delete id="deleteBoards" parameterType="list">
		DELETE FROM 
			board 
		WHERE
			id IN
		 	<foreach collection="list" item="id" open="(" close=")" separator=",">	
				#{id}
			</foreach>
	</delete>
</mapper>