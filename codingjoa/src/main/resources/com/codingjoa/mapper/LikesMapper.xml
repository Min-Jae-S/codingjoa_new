<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codingjoa.mapper.LikesMapper">
<!--
	board_likes_idx         NUMBER,
    board_idx           	NUMBER      NOT NULL,
	member_idx          	NUMBER      NOT NULL,
	regdate                 DATE        NOT NULL,
	
	comment_likes_idx       NUMBER,
    comment_idx             NUMBER      NOT NULL,
	member_idx              NUMBER      NOT NULL,
	regdate                 DATE        NOT NULL,
-->

	<update id="delOrInsBoardLikes" parameterType="boardLikes">
		<selectKey keyProperty="boardIdx,boardLikesIdx" resultType="boardLikes" order="BEFORE">
			SELECT
    			MAX(a.board_idx) AS board_idx,
    			MAX(b.board_likes_idx) AS board_likes_idx
			FROM
				board a
			LEFT OUTER JOIN (
    			SELECT 
    				board_likes_idx, 
    				board_idx
    			FROM 
    				board_likes
    			WHERE 
    				member_idx = #{memberIdx}
			) b
			ON
				a.board_idx = b.board_idx
			WHERE 
				a.board_idx = #{boardIdx}
		</selectKey>
		BEGIN
			IF #{boardIdx} IS NOT NULL THEN
				IF #{boardLikesIdx} IS NOT NULL THEN
					DELETE FROM
						board_likes
					WHERE
						board_likes_idx = #{boardLikesIdx};
				ELSE
					INSERT INTO board_likes (
						board_likes_idx,
						board_idx,
						member_idx,
						regdate
					) VALUES (
						seq_board_likes.NEXTVAL,
						#{boardIdx},
						#{memberIdx},
						SYSDATE
					);
				END IF;
			END IF;
		END;
	</update>

	<!-- <update id="mergeBoardLikes" parameterType="boardLikes">
		<selectKey keyProperty="boardIdx" resultType="int" order="BEFORE">
			SELECT 
				MAX(board_idx)
			FROM 
				board 
			WHERE 
				board_idx = #{boardIdx}
		</selectKey>
		BEGIN
			IF #{boardIdx} IS NOT NULL THEN
				MERGE INTO 
					board_likes
				USING
					DUAL
				ON (
					board_idx = #{boardIdx} 
					AND
					member_idx = #{memberIdx}
				)
				WHEN MATCHED THEN
					UPDATE SET
						board_likes_idx = board_likes_idx
					DELETE WHERE
						board_likes_idx = board_likes_idx
				WHEN NOT MATCHED THEN
					INSERT (
						board_likes_idx,
						board_idx,
						member_idx,
						regdate
					) VALUES (
						seq_board_likes.NEXTVAL,
						#{boardIdx},
						#{memberIdx},
						SYSDATE
					);
			END IF;
		END;
	</update> -->
	
	<select id="findCommentLikesByCommentAndMember" parameterType="map" resultType="commentLikes">
		SELECT 
			*
		FROM
			comment_likes
		WHERE
			comment_idx = #{commentIdx}
		AND
			member_idx = #{memberIdx}
	</select>
	
	<insert id="insertCommentLikes" parameterType="map">
		INSERT INTO comment_likes (
			comment_likes_idx,
			comment_idx,
			member_idx,
			regdate
		) VALUES (
			seq_comment_likes.NEXTVAL,
			#{commentIdx},
			#{memberIdx},
			SYSDATE
		)
	</insert>
	
	<delete id="deleteCommentLikes" parameterType="int">
		DELETE FROM
			comment_likes
		WHERE
			comment_likes_idx = #{commentLikesIdx}
	</delete>
	
	<!-- <update id="mergeCommentLikes" parameterType="commentLikes">
		<selectKey keyProperty="commentIdx,commentLikesIdx" resultType="commentLikes" order="BEFORE">
			SELECT 
				MAX(a.comment_idx) AS comment_idx,
				MAX(b.comment_likes_idx) AS comment_likes_idx
			FROM 
				"comment" a
			LEFT OUTER JOIN (
				SELECT
					comment_likes_idx,
					comment_idx
				FROM
					comment_likes
				WHERE
					member_idx = #{memberIdx}
			) b
			ON
				a.comment_idx = b.comment_idx
			WHERE 
				a.comment_idx = #{commentIdx}
		</selectKey>
		BEGIN
			IF #{commentIdx} IS NOT NULL THEN
				IF #{commentLikesIdx} IS NOT NULL THEN
					DELETE FROM
						comment_likes
					WHERE
						comment_likes_idx = #{commentLikesIdx};
				ELSE
					INSERT INTO comment_likes (
						comment_likes_idx,
						comment_idx,
						member_idx,
						regdate
					) VALUES (
						seq_comment_likes.NEXTVAL,
						#{commentIdx},
						#{memberIdx},
						SYSDATE
					);
				END IF;
			END IF;
		END;
	</update> -->

	<select id="findBoardLikesCnt" parameterType="int" resultType="int">
		SELECT
			COUNT(*)
		FROM
			board_likes
		WHERE
			board_idx = #{boardIdx}
	</select>

	<select id="findCommentLikesCnt" parameterType="int" resultType="int">
		SELECT
			COUNT(*)
		FROM
			comment_likes
		WHERE
			comment_idx = #{commentIdx}
	</select>
	
</mapper>