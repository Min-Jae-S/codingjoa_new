<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codingjoa.mapper.CommentMapper">
<!--  
	comment_idx              NUMBER,
    comment_writer_idx       NUMBER                       NOT NULL,
	comment_board_idx        NUMBER                       NOT NULL,
	comment_content          VARCHAR2(2000)               NOT NULL,
    comment_use              CHAR(1)                      NOT NULL,
	regdate                  DATE                         NOT NULL,
    moddate                  DATE                         NOT NULL,
-->

	<resultMap type="map" id="commentDetailsMap">
		<id property="commentIdx" column="comment_idx"/>
		 <!-- java.math.BigDecimal -->
		<result property="commentWriterIdx" column="comment_writer_idx" javaType="java.lang.Integer"/>
		<result property="commentBoardIdx" column="comment_board_idx" javaType="java.lang.Integer"/>
		<result property="commentContent" column="comment_content" javaType="java.lang.String"/>
		<result property="commentUse" column="comment_use" javaType="java.lang.Boolean"/>
		<result property="regdate" column="regdate" javaType="java.util.Date"/>
		<result property="moddate" column="moddate" javaType="java.util.Date"/>
		<result property="commentWriterId" column="comment_writer_id" javaType="java.lang.String"/>
		<!-- <result property="commentLikes" column=""/> -->
	</resultMap>
	
<!-- 	<update id="insertComment" parameterType="comment">
		<selectKey keyProperty="commentBoardIdx" resultType="int" order="BEFORE">
			SELECT MAX(board_idx) FROM board WHERE board_idx = #{commentBoardIdx}
		</selectKey>
		MERGE INTO "comment"
		USING DUAL
		ON
		WHEN MATCHED THEN
			INSERT (
				comment_idx,
				comment_writer_idx,
				comment_board_idx,
				comment_content,
				comment_use,
				regdate,
				moddate
			) VALUES (
				seq_comment.NEXTVAL,
				#{commentWriterIdx},
				#{commentBoardIdx},
				#{commentContent},
				#{commentUse},
				SYSDATE,
				SYSDATE
			)
	</update> -->
	
	<insert id="insertComment" parameterType="comment">
		<selectKey keyProperty="commentBoardIdx" resultType="int" order="BEFORE">
			SELECT MAX(board_idx) FROM board WHERE board_idx = #{commentBoardIdx}
		</selectKey>
		INSERT INTO "comment" (
			comment_idx,
			comment_writer_idx,
			comment_board_idx,
			comment_content,
			comment_use,
			regdate,
			moddate
		) SELECT 
			seq_comment.NEXTVAL,
			#{commentWriterIdx},
			#{commentBoardIdx},
			#{commentContent},
			#{commentUse},
			SYSDATE,
			SYSDATE
		WHERE 
			#{commentBoardIdx} IS NOT NULL
		<!-- WHERE EXISTS (
			SELECT
				1
			FROM
				DUAL
			WHERE
				#{commentBoardIdx} IS NOT NULL
		) -->
	</insert>
	
	<select id="findPagedComment" parameterType="map" resultMap="commentDetailsMap">
		SELECT
    		/*+ LEADING(b) INDEX_DESC(a pk_comment) */ 
			a.comment_idx,
			a.comment_writer_idx, 
			a.comment_board_idx,
			a.comment_content,
			a.comment_use,
	        a.regdate,
	        a.moddate,
    		b.member_id AS comment_writer_id
		FROM (
		    SELECT
		        ROWNUM rn, 
		        comment_idx,
		        comment_writer_idx,
		        comment_board_idx,
		        comment_content, 
		        comment_use,
		        regdate,
		        moddate
		    FROM 
		        "comment"
		    WHERE
		    	comment_board_idx = #{commentBoardIdx}
		    AND
				<![CDATA[
				ROWNUM <= ( #{commentCri.page} * #{commentCri.recordCnt} )
				]]>
		) a
		INNER JOIN
			member b
		ON 
			a.comment_writer_idx = b.member_idx 
		WHERE 
			a.rn > ( ( #{commentCri.page} - 1 ) * #{commentCri.recordCnt} )
	</select>
	
	<select id="findPagedCommentTotalCnt" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			"comment"
		WHERE
			comment_board_idx = #{commentBoardIdx}
	</select>
	
	<select id="findCommentDetails" parameterType="map" resultMap="commentDetailsMap">
		SELECT
			a.comment_idx,
			a.comment_writer_idx, 
			a.comment_board_idx,
			a.comment_content,
			a.comment_use,
	        a.regdate,
	        a.moddate,
    		b.member_id AS comment_writer_id
		FROM
			"comment" a
		INNER JOIN
			member b
		ON
			a.comment_writer_idx = b.member_idx
		WHERE
			a.comment_idx = #{commentIdx}
		<!-- AND 
			a.comment_writer_idx = #{commentWriterIdx} -->
	</select>
	
	<update id="updateComment" parameterType="comment">
		<selectKey keyProperty="commentIdx,commentWriterIdx,commentUse" resultType="comment" order="BEFORE">
			SELECT
				MAX(comment_idx) AS commentIdx,
				MAX(comment_writer_idx) AS commentWriterIdx,
				MAX(comment_use) AS commentUse
			FROM
				"comment" 
			WHERE 
				comment_idx = #{commentIdx}
		</selectKey>
		BEGIN
			IF #{commentIdx} IS NOT NULL THEN 
				UPDATE
					"comment"
				SET
					comment_content = #{commentContent},
					moddate = SYSDATE
				WHERE
					comment_idx = #{commentIdx};
			END IF;
		END;
	</update>

	<update id="deleteComment" parameterType="comment">
		<selectKey keyProperty="commentIdx,commentWriterIdx,commentUse" resultType="comment" order="BEFORE">
			SELECT
				MAX(comment_idx) AS commentIdx,
				MAX(comment_writer_idx) AS commentWriterIdx,
				MAX(comment_use) AS commentUse
			FROM
				"comment" 
			WHERE 
				comment_idx = #{commentIdx}
		</selectKey>
		BEGIN
			IF #{commentIdx} IS NOT NULL THEN 
				UPDATE
					"comment"
				SET
					comment_use = 0,
					moddate = SYSDATE
				WHERE
					comment_idx = #{commentIdx};
			END IF;
		END;
	</update>
	
</mapper>